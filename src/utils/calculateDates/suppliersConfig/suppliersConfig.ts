import { DateTime } from 'luxon';
import { SearchResultsParsed, SupplierConfig } from 'types/index.js';

const getNextWorkingDay =
  (allowedWeekdays: number[]) =>
  (from: DateTime): DateTime => {
    let d = from;
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å 'from'
    if (allowedWeekdays.includes(d.weekday)) {
      return d;
    }
    // –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–æ—à–µ–ª, –∏—â–µ–º —Å–ª–µ–¥—É—é—â–∏–π
    while (true) {
      d = d.plus({ days: 1 });
      if (allowedWeekdays.includes(d.weekday)) return d;
    }
  };

export const suppliersConfig: SupplierConfig[] = [
  {
    supplierName: 'patriot',

    // –≤—Ç–æ—Ä–Ω–∏–∫‚Äì—Å—É–±–±–æ—Ç–∞
    workingDays: [2, 3, 4, 5, 6],

    cutoffTimes: {
      default: '11:30',
      extended: '20:00',
    },

    processingTime: { days: 0 },

    /* >>> –ù–û–í–´–ô –±–ª–æ–∫ <<< */
    specialConditions: (
      now: DateTime,
      result: SearchResultsParsed
    ): DateTime => {
      const { workingDays, cutoffTimes } = suppliersConfig.find(
        (c) => c.supplierName === 'patriot'
      )!;

      // 1. –ß–∞—Å—ã, –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–µ ABCP:
      //   Patriot üëá —Ä–µ–∞–ª—å–Ω–æ –∫–ª–∞–¥—ë—Ç ¬´—Å—Ä–æ–∫ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏¬ª –≤ –ø–æ–ª–µ `deadline`
      const hours = result.deadline > 0 ? result.deadline : 24;

      /** ¬´–ß–µ—Ä–Ω–æ–≤–∞—è¬ª –¥–∞—Ç–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–±–∞–≤–ª—è–µ–º —á–∞—Å—ã  */
      let tentative = now.plus({ hours });

      /** 2. –ï—Å–ª–∏ –≤—ã—à–ª–∏ –∑–∞ extended-cutoff —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è, - –¥–≤–∏–≥–∞–µ–º –Ω–∞ —Å—É—Ç–∫–∏ */
      const extended = DateTime.fromFormat(cutoffTimes.extended, 'HH:mm', {
        zone: now.zone,
      }).set({
        year: tentative.year,
        month: tentative.month,
        day: tentative.day,
      });

      if (tentative > extended) {
        tentative = tentative.plus({ days: 1 });
      }

      /** 3. –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å Patriot */
      return getNextWorkingDay(workingDays)(tentative);
    },
  },
  {
    supplierName: 'ug',
    workingDays: [1, 4],
    cutoffTimes: { default: '14:00' },
    processingTime: { days: 0 },
    specialConditions: (currentTime: DateTime, result: SearchResultsParsed) => {
      let deliveryDate: DateTime;

      /**
       * –§—É–Ω–∫—Ü–∏—è –∏—â–µ—Ç –±–ª–∏–∂–∞–π—à–∏–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (weekday=1) –∏–ª–∏ —á–µ—Ç–≤–µ—Ä–≥ (weekday=4)
       * –°–¢–†–û–ì–û –ü–û–°–õ–ï –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã (—Ç. –µ. –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –¥–µ–Ω—å, –º—ã –µ–≥–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º).
       */
      const getNextDeliveryDateFrom = (date: DateTime): DateTime => {
        let nextDate = date;
        while (true) {
          // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –∏–ª–∏ —á–µ—Ç–≤–µ—Ä–≥
          if (nextDate.weekday === 1 || nextDate.weekday === 4) {
            // –ï—Å–ª–∏ –¥–µ–Ω—å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏—Å—Ö–æ–¥–Ω—ã–º (–ø–æ –¥–∞—Ç–µ), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –µ–≥–æ
            // (—Ç–µ–º —Å–∞–º—ã–º –Ω–µ –¥–∞—ë–º –≤—ã–±—Ä–∞—Ç—å ¬´—Å–µ–≥–æ–¥–Ω—è¬ª).
            if (nextDate.hasSame(date, 'day')) {
              nextDate = nextDate.plus({ days: 1 });
              continue;
            }
            return nextDate;
          }
          nextDate = nextDate.plus({ days: 1 });
        }
      };

      // –ï—Å–ª–∏ deadLineMax > 0, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–±–∞–≤–ª—è–µ–º —ç—Ç–∏ —á–∞—Å—ã –∫ currentTime
      // (–≤ –≤–∞—à–µ–º –∫–æ–¥–µ —ç—Ç–æ —Ç—Ä–∞–∫—Ç—É–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ –∫–∞–∫ "—á–∞—Å–æ–≤" –±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏—è –≤—ã—Ö–æ–¥–Ω—ã—Ö/–ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤).
      if (result.deadLineMax > 0) {
        const tentativeDate = currentTime.plus({ hours: result.deadLineMax });
        deliveryDate = getNextDeliveryDateFrom(tentativeDate);
      } else {
        // –ò–Ω–∞—á–µ –ª–æ–≥–∏–∫–∞ ¬´–µ—Å–ª–∏ –¥–æ 14:00 ‚Äì —Å–¥–≤–∏–≥–∞–µ–º –Ω–∞ +1 –¥–µ–Ω—å, –µ—Å–ª–∏ –ø–æ—Å–ª–µ 14:00 ‚Äì –Ω–∞ +2 –¥–Ω—è¬ª
        if (currentTime.hour < 14) {
          const tentativeDate = currentTime.plus({ days: 1 });
          deliveryDate = getNextDeliveryDateFrom(tentativeDate);
        } else {
          const tentativeDate = currentTime.plus({ days: 2 });
          deliveryDate = getNextDeliveryDateFrom(tentativeDate);
        }
      }

      return deliveryDate;
    },
  },
  {
    supplierName: 'ug_bn',
    workingDays: [1, 4],
    cutoffTimes: { default: '14:00' },
    processingTime: { days: 0 },
    specialConditions: (currentTime: DateTime, result: SearchResultsParsed) => {
      let deliveryDate: DateTime;

      /**
       * –§—É–Ω–∫—Ü–∏—è –∏—â–µ—Ç –±–ª–∏–∂–∞–π—à–∏–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (weekday=1) –∏–ª–∏ —á–µ—Ç–≤–µ—Ä–≥ (weekday=4)
       * –°–¢–†–û–ì–û –ü–û–°–õ–ï –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã (—Ç. –µ. –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –¥–µ–Ω—å, –º—ã –µ–≥–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º).
       */
      const getNextDeliveryDateFrom = (date: DateTime): DateTime => {
        let nextDate = date;
        while (true) {
          // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –∏–ª–∏ —á–µ—Ç–≤–µ—Ä–≥
          if (nextDate.weekday === 1 || nextDate.weekday === 4) {
            // –ï—Å–ª–∏ –¥–µ–Ω—å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏—Å—Ö–æ–¥–Ω—ã–º (–ø–æ –¥–∞—Ç–µ), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –µ–≥–æ
            // (—Ç–µ–º —Å–∞–º—ã–º –Ω–µ –¥–∞—ë–º –≤—ã–±—Ä–∞—Ç—å ¬´—Å–µ–≥–æ–¥–Ω—è¬ª).
            if (nextDate.hasSame(date, 'day')) {
              nextDate = nextDate.plus({ days: 1 });
              continue;
            }
            return nextDate;
          }
          nextDate = nextDate.plus({ days: 1 });
        }
      };

      // –ï—Å–ª–∏ deadLineMax > 0, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–±–∞–≤–ª—è–µ–º —ç—Ç–∏ —á–∞—Å—ã –∫ currentTime
      // (–≤ –≤–∞—à–µ–º –∫–æ–¥–µ —ç—Ç–æ —Ç—Ä–∞–∫—Ç—É–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ –∫–∞–∫ "—á–∞—Å–æ–≤" –±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏—è –≤—ã—Ö–æ–¥–Ω—ã—Ö/–ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤).
      if (result.deadLineMax > 0) {
        const tentativeDate = currentTime.plus({ hours: result.deadLineMax });
        deliveryDate = getNextDeliveryDateFrom(tentativeDate);
      } else {
        // –ò–Ω–∞—á–µ –ª–æ–≥–∏–∫–∞ ¬´–µ—Å–ª–∏ –¥–æ 14:00 ‚Äì —Å–¥–≤–∏–≥–∞–µ–º –Ω–∞ +1 –¥–µ–Ω—å, –µ—Å–ª–∏ –ø–æ—Å–ª–µ 14:00 ‚Äì –Ω–∞ +2 –¥–Ω—è¬ª
        if (currentTime.hour < 14) {
          const tentativeDate = currentTime.plus({ days: 1 });
          deliveryDate = getNextDeliveryDateFrom(tentativeDate);
        } else {
          const tentativeDate = currentTime.plus({ days: 2 });
          deliveryDate = getNextDeliveryDateFrom(tentativeDate);
        }
      }

      return deliveryDate;
    },
  },
  {
    supplierName: 'ug_f',
    workingDays: [1, 4],
    cutoffTimes: { default: '14:00' },
    processingTime: { days: 0 },
    specialConditions: (currentTime: DateTime, result: SearchResultsParsed) => {
      let deliveryDate: DateTime;

      /**
       * –§—É–Ω–∫—Ü–∏—è –∏—â–µ—Ç –±–ª–∏–∂–∞–π—à–∏–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (weekday=1) –∏–ª–∏ —á–µ—Ç–≤–µ—Ä–≥ (weekday=4)
       * –°–¢–†–û–ì–û –ü–û–°–õ–ï –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã (—Ç. –µ. –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –¥–µ–Ω—å, –º—ã –µ–≥–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º).
       */
      const getNextDeliveryDateFrom = (date: DateTime): DateTime => {
        let nextDate = date;
        while (true) {
          // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –∏–ª–∏ —á–µ—Ç–≤–µ—Ä–≥
          if (nextDate.weekday === 1 || nextDate.weekday === 4) {
            // –ï—Å–ª–∏ –¥–µ–Ω—å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∏—Å—Ö–æ–¥–Ω—ã–º (–ø–æ –¥–∞—Ç–µ), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –µ–≥–æ
            // (—Ç–µ–º —Å–∞–º—ã–º –Ω–µ –¥–∞—ë–º –≤—ã–±—Ä–∞—Ç—å ¬´—Å–µ–≥–æ–¥–Ω—è¬ª).
            if (nextDate.hasSame(date, 'day')) {
              nextDate = nextDate.plus({ days: 1 });
              continue;
            }
            return nextDate;
          }
          nextDate = nextDate.plus({ days: 1 });
        }
      };

      // –ï—Å–ª–∏ deadLineMax > 0, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–±–∞–≤–ª—è–µ–º —ç—Ç–∏ —á–∞—Å—ã –∫ currentTime
      // (–≤ –≤–∞—à–µ–º –∫–æ–¥–µ —ç—Ç–æ —Ç—Ä–∞–∫—Ç—É–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ –∫–∞–∫ "—á–∞—Å–æ–≤" –±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏—è –≤—ã—Ö–æ–¥–Ω—ã—Ö/–ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤).
      if (result.deadLineMax > 0) {
        const tentativeDate = currentTime.plus({ hours: result.deadLineMax });
        deliveryDate = getNextDeliveryDateFrom(tentativeDate);
      } else {
        // –ò–Ω–∞—á–µ –ª–æ–≥–∏–∫–∞ ¬´–µ—Å–ª–∏ –¥–æ 14:00 ‚Äì —Å–¥–≤–∏–≥–∞–µ–º –Ω–∞ +1 –¥–µ–Ω—å, –µ—Å–ª–∏ –ø–æ—Å–ª–µ 14:00 ‚Äì –Ω–∞ +2 –¥–Ω—è¬ª
        if (currentTime.hour < 14) {
          const tentativeDate = currentTime.plus({ days: 1 });
          deliveryDate = getNextDeliveryDateFrom(tentativeDate);
        } else {
          const tentativeDate = currentTime.plus({ days: 2 });
          deliveryDate = getNextDeliveryDateFrom(tentativeDate);
        }
      }

      return deliveryDate;
    },
  },

  {
    supplierName: 'turboCars',
    workingDays: [1, 2, 3, 4, 5, 6], // –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - —Å—É–±–±–æ—Ç–∞
    cutoffTimes: {
      '–†–î-3': '12:00',
      default: 'deadLineTimeToOrder', // –ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –∏–∑ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞
    },
    processingTime: { days: 0 },
    specialConditions: (currentTime: DateTime, result: SearchResultsParsed) => {
      let deliveryDate: DateTime;

      if (result.warehouse === '–†–î-3') {
        if (currentTime.hour < 12) {
          deliveryDate = currentTime;
        } else {
          deliveryDate = currentTime.plus({ days: 1 });
        }
      } else {
        // –†–∞–∑–±–æ—Ä 'deadLineTimeToOrder' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞—Å–∞ –∏ –º–∏–Ω—É—Ç—ã
        let deadlineHour = 0;
        let deadlineMinute = 0;
        if (result.deadLineTimeToOrder) {
          const [hourStr, minuteStr] = result.deadLineTimeToOrder.split(':');
          deadlineHour = parseInt(hourStr, 10);
          deadlineMinute = parseInt(minuteStr, 10);
        }

        let orderBeforeDeadline = false;

        if (
          currentTime.hour < deadlineHour ||
          (currentTime.hour === deadlineHour &&
            currentTime.minute <= deadlineMinute)
        ) {
          orderBeforeDeadline = true;
        }

        let daysToAdd = result.deadline;

        if (!orderBeforeDeadline) {
          daysToAdd += 1;
        }

        deliveryDate = currentTime.plus({ days: daysToAdd });
      }

      // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¥–ª—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è
      while (deliveryDate.weekday === 7) {
        deliveryDate = deliveryDate.plus({ days: 1 });
      }

      return deliveryDate;
    },
  },
  {
    supplierName: 'profit',
    workingDays: [1, 2, 3, 4, 5, 6],
    cutoffTimes: {},
    processingTime: {},
    specialConditions: (currentTime: DateTime, result: SearchResultsParsed) => {
      let deliveryDate: DateTime | '';

      if (result.deliveryDate) {
        deliveryDate = DateTime.fromISO(result.deliveryDate);
      } else {
        deliveryDate = '';
      }

      return deliveryDate;
    },
  },
  {
    supplierName: 'autosputnik',
    workingDays: [1, 2, 3, 4, 5, 6],
    cutoffTimes: {},
    processingTime: {},
    specialConditions: (currentTime: DateTime, result: SearchResultsParsed) => {
      let deliveryDate: DateTime | '';

      if (result.deliveryDate) {
        deliveryDate = DateTime.fromISO(result.deliveryDate);
      } else {
        deliveryDate = '';
      }

      return deliveryDate;
    },
  },
  {
    supplierName: 'autosputnik_bn',
    workingDays: [1, 2, 3, 4, 5, 6],
    cutoffTimes: {},
    processingTime: {},
    specialConditions: (currentTime: DateTime, result: SearchResultsParsed) => {
      let deliveryDate: DateTime | '';

      if (result.deliveryDate) {
        deliveryDate = DateTime.fromISO(result.deliveryDate);
      } else {
        deliveryDate = '';
      }

      return deliveryDate;
    },
  },
  {
    supplierName: 'autoImpulse',
    workingDays: [2, 5], // –í—Ç–æ—Ä–Ω–∏–∫ –∏ –ø—è—Ç–Ω–∏—Ü–∞
    cutoffTimes: {
      default: '15:00', // –ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ 15:00
    },
    processingTime: { days: 0 },
    specialConditions: (currentTime: DateTime, result: SearchResultsParsed) => {
      let deliveryDate: DateTime;
      const weekday = currentTime.weekday; // 1 = Monday, ..., 7 = Sunday
      const hour = currentTime.hour;
      const minute = currentTime.minute;

      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
      const getNextWeekday = (
        current: DateTime,
        targetWeekday: number
      ): DateTime => {
        let daysToAdd = (targetWeekday - current.weekday + 7) % 7;
        if (daysToAdd === 0) {
          daysToAdd = 7; // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è —Ü–µ–ª–µ–≤–æ–π –¥–µ–Ω—å, –≤—ã–±—Ä–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π
        }
        return current.plus({ days: daysToAdd });
      };

      if (weekday === 2) {
        // –í—Ç–æ—Ä–Ω–∏–∫
        if (hour < 15 || (hour === 15 && minute === 0)) {
          // –ó–∞–∫–∞–∑ –¥–æ 15:00 –≤–æ –≤—Ç–æ—Ä–Ω–∏–∫ ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Å—Ä–µ–¥—É
          deliveryDate = currentTime.plus({ days: 1 });
        } else {
          // –ó–∞–∫–∞–∑ –ø–æ—Å–ª–µ 15:00 –≤–æ –≤—Ç–æ—Ä–Ω–∏–∫ ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Å—É–±–±–æ—Ç—É
          deliveryDate = getNextWeekday(currentTime, 6); // 6 = Saturday
        }
      } else if (weekday === 5) {
        // –ü—è—Ç–Ω–∏—Ü–∞
        if (hour < 15 || (hour === 15 && minute === 0)) {
          // –ó–∞–∫–∞–∑ –¥–æ 15:00 –≤ –ø—è—Ç–Ω–∏—Ü—É ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Å—É–±–±–æ—Ç—É
          deliveryDate = currentTime.plus({ days: 1 });
        } else {
          // –ó–∞–∫–∞–∑ –ø–æ—Å–ª–µ 15:00 –≤ –ø—è—Ç–Ω–∏—Ü—É ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Å–ª–µ–¥—É—é—â—É—é —Å—Ä–µ–¥—É
          deliveryDate = getNextWeekday(currentTime, 3); // 3 = Wednesday
        }
      } else {
        // –í –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–Ω–∏ ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é —Å—Ä–µ–¥—É –∏–ª–∏ —Å—É–±–±–æ—Ç—É
        const nextWednesday = getNextWeekday(currentTime, 3);
        const nextSaturday = getNextWeekday(currentTime, 6);

        // –í—ã–±—Ä–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–π –∏–∑ –¥–≤—É—Ö –¥–Ω–µ–π
        if (nextWednesday < nextSaturday) {
          deliveryDate = nextWednesday;
        } else {
          deliveryDate = nextSaturday;
        }
      }

      return deliveryDate;
    },
  },
  {
    supplierName: 'npn',
    workingDays: [2, 5], // –î–Ω–∏ –æ—Ç–≥—Ä—É–∑–∫–∏: –í—Ç–æ—Ä–Ω–∏–∫ –∏ –ü—è—Ç–Ω–∏—Ü–∞
    cutoffTimes: {
      default: '15:00', // –í—Ä–µ–º—è –æ—Ç—Å–µ—á–∫–∏ –¥–ª—è –æ—Ç–≥—Ä—É–∑–∫–∏
    },
    processingTime: { days: 0 },
    specialConditions: (
      currentTime: DateTime,
      result: SearchResultsParsed
    ): DateTime => {
      // 1. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º, –∫–æ–≥–¥–∞ —Ç–æ–≤–∞—Ä –±—É–¥–µ—Ç –ì–û–¢–û–í –∫ –æ—Ç–≥—Ä—É–∑–∫–µ –Ω–∞ —Å–∫–ª–∞–¥–µ NPN
      const readyForShipmentTime = currentTime.plus({
        hours: result.deadline,
      });

      const shipmentDays = [2, 5]; // –í—Ç–æ—Ä–Ω–∏–∫, –ü—è—Ç–Ω–∏—Ü–∞
      const [cutoffHour, cutoffMinute] = '15:00'.split(':').map(Number);

      // 2. –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –¥–Ω—è –æ—Ç–≥—Ä—É–∑–∫–∏, –æ—Ç—Ç–∞–ª–∫–∏–≤–∞—è—Å—å –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞
      let shipmentDay = readyForShipmentTime;

      // –ò—â–µ–º –≤ —Ü–∏–∫–ª–µ (–º–∞–∫—Å–∏–º—É–º 7 –∏—Ç–µ—Ä–∞—Ü–∏–π –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
      for (let i = 0; i < 7; i++) {
        // –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –¥–Ω–µ–º –æ—Ç–≥—Ä—É–∑–∫–∏?
        if (shipmentDays.includes(shipmentDay.weekday)) {
          // –î–∞. –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä–∏–º, —É—Å–ø–µ–≤–∞–µ–º –ª–∏ –º—ã –¥–æ –æ—Ç—Å–µ—á–∫–∏.
          const cutoffDateTime = shipmentDay.set({
            hour: cutoffHour,
            minute: cutoffMinute,
          });

          if (readyForShipmentTime <= cutoffDateTime) {
            // –£—Å–ø–µ–ª–∏! –≠—Ç–æ –Ω–∞—à –¥–µ–Ω—å –æ—Ç–≥—Ä—É–∑–∫–∏.
            // –î–æ—Å—Ç–∞–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç—É –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å.
            return shipmentDay.plus({ days: 1 });
          }
        }

        // –ï—Å–ª–∏ –¥–µ–Ω—å –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–ª–∏ –º—ã –æ–ø–æ–∑–¥–∞–ª–∏ –∫ –æ—Ç—Å–µ—á–∫–µ,
        // –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –Ω–∞—á–∞–ª—É —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É.
        shipmentDay = shipmentDay.plus({ days: 1 }).startOf('day');
      }

      // –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
      return currentTime.plus({ days: 10 });
    },
  },
  {
    supplierName: 'mikano',
    workingDays: [1, 5], // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –∏ –ø—è—Ç–Ω–∏—Ü–∞
    cutoffTimes: {
      default: '15:00', // –ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ 15:00
    },
    processingTime: { days: 0 },
    specialConditions: (currentTime: DateTime, result: SearchResultsParsed) => {
      let deliveryDate: DateTime;
      const weekday = currentTime.weekday; // 1 = Monday, ..., 7 = Sunday
      const hour = currentTime.hour;
      const minute = currentTime.minute;

      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
      const getNextWeekday = (
        current: DateTime,
        targetWeekday: number
      ): DateTime => {
        let daysToAdd = (targetWeekday - current.weekday + 7) % 7;
        if (daysToAdd === 0) {
          daysToAdd = 7; // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è —Ü–µ–ª–µ–≤–æ–π –¥–µ–Ω—å, –≤—ã–±—Ä–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π
        }
        return current.plus({ days: daysToAdd });
      };

      if (weekday === 1) {
        // 1 = –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 5 –ø—è—Ç–Ω–∏—Ü–∞
        // –ü—è—Ç–Ω–∏—Ü–∞
        if (hour < 15 || (hour === 15 && minute === 0)) {
          // –ó–∞–∫–∞–∑ –¥–æ 15:00 –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –≤–æ –≤—Ç–æ—Ä–Ω–∏–∫
          deliveryDate = currentTime.plus({ days: 1 });
        } else {
          // –ó–∞–∫–∞–∑ –ø–æ—Å–ª–µ 15:00 –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Å—É–±–±–æ—Ç—É
          deliveryDate = getNextWeekday(currentTime, 6); // 6 = Saturday
        }
      } else if (weekday === 5) {
        // –ü—è—Ç–Ω–∏—Ü–∞
        if (hour < 15 || (hour === 15 && minute === 0)) {
          // –ó–∞–∫–∞–∑ –¥–æ 15:00 –≤ –ø—è—Ç–Ω–∏—Ü—É ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Å—É–±–±–æ—Ç—É
          deliveryDate = currentTime.plus({ days: 1 });
        } else {
          // –ó–∞–∫–∞–∑ –ø–æ—Å–ª–µ 15:00 –≤ –ø—è—Ç–Ω–∏—Ü—É ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Å–ª–µ–¥—É—é—â–∏–π –≤—Ç–æ—Ä–Ω–∏–∫
          deliveryDate = getNextWeekday(currentTime, 2); // 2 = –í—Ç–æ—Ä–Ω–∏–∫
        }
      } else {
        // –í –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–Ω–∏ ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–π –≤—Ç–æ—Ä–Ω–∏–∫ –∏–ª–∏ —Å—É–±–±–æ—Ç—É
        const nextTuesday = getNextWeekday(currentTime, 2);
        const nextSaturday = getNextWeekday(currentTime, 6);

        // –í—ã–±—Ä–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–π –∏–∑ –¥–≤—É—Ö –¥–Ω–µ–π
        if (nextTuesday < nextSaturday) {
          deliveryDate = nextTuesday;
        } else {
          deliveryDate = nextSaturday;
        }
      }

      return deliveryDate;
    },
  },
];
